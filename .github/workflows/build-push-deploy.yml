name: Build, push and deploy Docker image to K3s

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    env:
      APP_URL: http://m1guelch.com:30080
      IMAGE_NAME: m1guelch/visit-counter
      KUBECTL_OPTS: "--insecure-skip-tls-verify=true"
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set image tag from commit SHA
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Log in to DockerHub registry
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build --no-cache -t $IMAGE_NAME:$IMAGE_TAG ./app
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Apply Kubernetes manifests
        run: |
          kubectl $KUBECTL_OPTS apply -f ./k8s/

      - name: Debug - List deployments
        run: kubectl $KUBECTL_OPTS get deployments

      - name: Update deployment in K3s cluster
        run: |
          kubectl $KUBECTL_OPTS set image deployment/visit-counter-deployment visit-counter=$IMAGE_NAME:$IMAGE_TAG
          kubectl $KUBECTL_OPTS rollout status deployment/visit-counter-deployment

      - name: Check app is responding
        run: |
          for i in {1..5}; do
            if curl --fail --silent --show-error $APP_URL/health; then
              echo "App is responding!"
              exit 0
            else
              echo "App not responding yet, retrying..."
              sleep 5
            fi
          done
          echo "❌ App did not respond after several attempts."
          exit 1

      - name: Wait for deployment to stabilize
        run: sleep 15

      - name: Verify deployment
        run: |
          kubectl $KUBECTL_OPTS get all

      - name: Output app URL
        run: |
          echo "::notice title=Deployment successful::App deployed → $APP_URL"
